/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @author Ammar Shadiq
 *
 */

package org.emje.treehtmlparse.xpathtree.panel;

import javax.swing.JFrame;
import org.emje.treehtmlparse.TreeHTMLParseApp;
import org.emje.treehtmlparse.alteredsourcestring.AlteredSourceStringView;
import org.emje.treehtmlparse.urlfilter.URLFilterView;
import org.emje.treehtmlparse.xpathtree.nodes.XPathTreeConfigNode;

public class XPathConfigItem extends javax.swing.JPanel {

    /** Creates new form XPathConfigItem */
    public XPathConfigItem() {
        initComponents();
    }

    public XPathConfigItem(XPathTreeConfigNode config) {
        nameTextField.setText(config.getName());
        nameTextField.setCaretPosition(0);
        hostNameTextField.setText(config.getHostName());
        hostNameTextField.setCaretPosition(0);
        sourceTextField.setText(config.getSourceURL());
        sourceTextField.setCaretPosition(0);
        initComponents();
    }

    public void setConfigItem(XPathTreeConfigNode config) {
        this.config = config;
        nameTextField.setText(config.getName());
        nameTextField.setCaretPosition(0);
        hostNameTextField.setText(config.getHostName());
        hostNameTextField.setCaretPosition(0);
        sourceTextField.setText(config.getSourceURL());
        sourceTextField.setCaretPosition(0);
    }

    public XPathTreeConfigNode getConfigItem(){
        return this.config;
    }

    /** This method is called from within the constructor to
        * initialize the form.
        * WARNING: Do NOT modify this code. The content of this method is
        * always regenerated by the Form Editor.
        */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    nameLabel = new javax.swing.JLabel();
    hostNameHLabel = new javax.swing.JLabel();
    nameTextField = new javax.swing.JTextField();
    hostNameTextField = new javax.swing.JTextField();
    sourceLabel = new javax.swing.JLabel();
    sourceTextField = new javax.swing.JTextField();
    alterSourceButton = new javax.swing.JButton();
    urlFilterButton = new javax.swing.JButton();

    setBorder(null);
    setName("Form"); // NOI18N

    nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    nameLabel.setText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.nameLabel.text")); // NOI18N
    nameLabel.setName("nameLabel"); // NOI18N

    hostNameHLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    hostNameHLabel.setText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.hostNameHLabel.text")); // NOI18N
    hostNameHLabel.setName("hostNameHLabel"); // NOI18N

    nameTextField.setText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.nameTextField.text")); // NOI18N
    nameTextField.setName("nameTextField"); // NOI18N
    nameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyTyped(java.awt.event.KeyEvent evt) {
        nameTextFieldKeyTyped(evt);
      }
    });

    hostNameTextField.setText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.hostNameTextField.text")); // NOI18N
    hostNameTextField.setName("hostNameTextField"); // NOI18N
    hostNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyTyped(java.awt.event.KeyEvent evt) {
        hostNameTextFieldKeyTyped(evt);
      }
    });

    sourceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    sourceLabel.setText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.sourceLabel.text")); // NOI18N
    sourceLabel.setName("sourceLabel"); // NOI18N

    sourceTextField.setEditable(false);
    sourceTextField.setText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.sourceTextField.text")); // NOI18N
    sourceTextField.setName("sourceTextField"); // NOI18N

    alterSourceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/emje/treehtmlparse/resources/edit-find-replace.png"))); // NOI18N
    alterSourceButton.setText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.alterSourceButton.text_1")); // NOI18N
    alterSourceButton.setToolTipText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.alterSourceButton.toolTipText")); // NOI18N
    alterSourceButton.setName("alterSourceButton"); // NOI18N
    alterSourceButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        alterSourceButtonActionPerformed(evt);
      }
    });

    urlFilterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/emje/treehtmlparse/resources/url-filter.png"))); // NOI18N
    urlFilterButton.setText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.urlFilterButton.text_1")); // NOI18N
    urlFilterButton.setToolTipText(org.openide.util.NbBundle.getMessage(XPathConfigItem.class, "XPathConfigItem.urlFilterButton.toolTipText")); // NOI18N
    urlFilterButton.setName("urlFilterButton"); // NOI18N
    urlFilterButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        urlFilterButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(hostNameHLabel)
          .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(sourceLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(hostNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
              .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(alterSourceButton)
              .addComponent(urlFilterButton)))
          .addComponent(sourceTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE))
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hostNameHLabel, nameLabel, sourceLabel});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(alterSourceButton)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(nameLabel)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(urlFilterButton)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(hostNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(hostNameHLabel)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(sourceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(sourceLabel))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {alterSourceButton, hostNameHLabel, hostNameTextField, nameLabel, nameTextField, urlFilterButton});

  }// </editor-fold>//GEN-END:initComponents

    private void nameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextFieldKeyTyped
        if(Character.isISOControl(evt.getKeyChar())){
            this.config.setName(nameTextField.getText());
        } else {
            this.config.setName(nameTextField.getText() + evt.getKeyChar());
        }

        this.xPathTree.getModel().valueForPathChanged(this.xPathTree.getSelectionPath(), this.config);
    }//GEN-LAST:event_nameTextFieldKeyTyped

    private void hostNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostNameTextFieldKeyTyped
      if(Character.isISOControl(evt.getKeyChar())){
            this.config.setHostName(hostNameTextField.getText());
        } else {
            this.config.setHostName(hostNameTextField.getText() + evt.getKeyChar());
        }
    }//GEN-LAST:event_hostNameTextFieldKeyTyped

    private void alterSourceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterSourceButtonActionPerformed
        JFrame mainFrame = TreeHTMLParseApp.getApplication().getMainFrame();
        config = AlteredSourceStringView.showDialog(mainFrame, true, config);
    }//GEN-LAST:event_alterSourceButtonActionPerformed

    private void urlFilterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlFilterButtonActionPerformed
        JFrame mainFrame = TreeHTMLParseApp.getApplication().getMainFrame();
        config = URLFilterView.showDialog(mainFrame, true, config);
    }//GEN-LAST:event_urlFilterButtonActionPerformed

    public void setXPathTree(javax.swing.JTree xPathTree){
        this.xPathTree = xPathTree;
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton alterSourceButton;
  private javax.swing.JLabel hostNameHLabel;
  private javax.swing.JTextField hostNameTextField;
  private javax.swing.JLabel nameLabel;
  private javax.swing.JTextField nameTextField;
  private javax.swing.JLabel sourceLabel;
  private javax.swing.JTextField sourceTextField;
  private javax.swing.JButton urlFilterButton;
  // End of variables declaration//GEN-END:variables

    private XPathTreeConfigNode config;
    private javax.swing.JTree xPathTree;
}
