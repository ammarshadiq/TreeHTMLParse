/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.emje.treehtmlparse.urlfilter;

import javax.swing.DefaultListModel;
import org.emje.treehtmlparse.xpathtree.nodes.XPathTreeConfigNode;

/**
 *
 * @author Ammar Shadiq
 */
public class URLFilterView extends javax.swing.JDialog {

    /** Creates new form URLFilterView */
    public URLFilterView(java.awt.Frame parent, XPathTreeConfigNode config) {
        super(parent);
        this.config = config;
        initComponents();
    }

//    public URLFilterView(JFrame mainFrame, XPathTreeConfigNode xPathTreeConfigNode) {
//        throw new UnsupportedOperationException("Not yet implemented");
//    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        skippedRemoveButton = new javax.swing.JButton();
        skippedEditButton = new javax.swing.JButton();
        skippedAddButton = new javax.swing.JButton();
        acceptedRemoveButton = new javax.swing.JButton();
        acceptedEditButton = new javax.swing.JButton();
        acceptedAddButton = new javax.swing.JButton();
        skippedListScrollPane = new javax.swing.JScrollPane();
        skippedList = new javax.swing.JList();
        skippedLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        acceptedListScrollPane = new javax.swing.JScrollPane();
        acceptedList = new javax.swing.JList();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        acceptedLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.title_1")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        skippedRemoveButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.skippedRemoveButton.text")); // NOI18N
        skippedRemoveButton.setName("skippedRemoveButton"); // NOI18N

        skippedEditButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.skippedEditButton.text")); // NOI18N
        skippedEditButton.setName("skippedEditButton"); // NOI18N

        skippedAddButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.skippedAddButton.text")); // NOI18N
        skippedAddButton.setName("skippedAddButton"); // NOI18N

        acceptedRemoveButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.acceptedRemoveButton.text")); // NOI18N
        acceptedRemoveButton.setName("acceptedRemoveButton"); // NOI18N

        acceptedEditButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.acceptedEditButton.text")); // NOI18N
        acceptedEditButton.setName("acceptedEditButton"); // NOI18N

        acceptedAddButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.acceptedAddButton.text")); // NOI18N
        acceptedAddButton.setName("acceptedAddButton"); // NOI18N

        skippedListScrollPane.setName("skippedListScrollPane"); // NOI18N

        skippedList.setModel(skippedListModel);
        skippedList.setName("skippedList"); // NOI18N
        skippedListScrollPane.setViewportView(skippedList);

        skippedLabel.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.skippedLabel.text")); // NOI18N
        skippedLabel.setName("skippedLabel"); // NOI18N

        jSeparator2.setName("jSeparator2"); // NOI18N

        acceptedListScrollPane.setName("acceptedListScrollPane"); // NOI18N

        acceptedList.setModel(this.acceptedListModel);
        acceptedList.setName("acceptedList"); // NOI18N
        acceptedListScrollPane.setViewportView(acceptedList);

        okButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        acceptedLabel.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.acceptedLabel.text")); // NOI18N
        acceptedLabel.setName("acceptedLabel"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acceptedLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(skippedListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                            .addComponent(acceptedListScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(acceptedAddButton)
                            .addComponent(acceptedEditButton)
                            .addComponent(acceptedRemoveButton)
                            .addComponent(skippedAddButton)
                            .addComponent(skippedEditButton)
                            .addComponent(skippedRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addComponent(skippedLabel)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {acceptedAddButton, acceptedEditButton, acceptedRemoveButton, cancelButton, okButton, skippedAddButton, skippedEditButton, skippedRemoveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(acceptedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acceptedAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acceptedEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acceptedRemoveButton))
                    .addComponent(acceptedListScrollPane, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skippedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(skippedAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(skippedEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(skippedRemoveButton))
                    .addComponent(skippedListScrollPane, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.restoreData();
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.acceptedListModelBackup = null;
        this.skippedListModelBackup = null;
//        this.config.setRemovedDataListModel(removedDataListModel);
//        this.config.setReplacedDataTableModel(replacedDataTableModel);
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    public void addAcceptedURL(String text){
        DefaultListModel model = (DefaultListModel) acceptedList.getModel();
        model.addElement(text);
    }

    public void editAcceptedURL(int index, String text){
        DefaultListModel model = (DefaultListModel) acceptedList.getModel();
        model.setElementAt(text, index);
    }

    public void addSkippedURL(String text){
        DefaultListModel model = (DefaultListModel) skippedList.getModel();
        model.addElement(text);
    }

    public void editSkippedURL(int index, String text){
        DefaultListModel model = (DefaultListModel) skippedList.getModel();
        model.setElementAt(text, index);
    }

    public void backupDataBeforeEdit (){
        // backUp accepted list data
        this.acceptedListModelBackup = new Object[acceptedListModel.getSize()];
        acceptedListModel.copyInto(acceptedListModelBackup);

        // backUp skipped strings list data
        this.skippedListModelBackup = new Object[skippedListModel.getSize()];
        skippedListModel.copyInto(skippedListModelBackup);
    }

    private void restoreData(){
        // restore accepted list data
        acceptedListModel.clear();
        for(int i = 0; i < this.acceptedListModelBackup.length; i++){
            acceptedListModel.addElement(this.acceptedListModelBackup[i]);
        }

        // restore skipped strings list data
        skippedListModel.clear();
        for(int i = 0; i < this.skippedListModelBackup.length; i++){
            skippedListModel.addElement(this.skippedListModelBackup[i]);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptedAddButton;
    private javax.swing.JButton acceptedEditButton;
    private javax.swing.JLabel acceptedLabel;
    private javax.swing.JList acceptedList;
    private javax.swing.JScrollPane acceptedListScrollPane;
    private javax.swing.JButton acceptedRemoveButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton okButton;
    private javax.swing.JButton skippedAddButton;
    private javax.swing.JButton skippedEditButton;
    private javax.swing.JLabel skippedLabel;
    private javax.swing.JList skippedList;
    private javax.swing.JScrollPane skippedListScrollPane;
    private javax.swing.JButton skippedRemoveButton;
    // End of variables declaration//GEN-END:variables

    private XPathTreeConfigNode config;
    private DefaultListModel acceptedListModel;
    private DefaultListModel skippedListModel;
    private Object[] acceptedListModelBackup;
    private Object[] skippedListModelBackup;

}
