/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @author Ammar Shadiq
 *
 */

package org.emje.treehtmlparse.urlfilter;

import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import org.emje.treehtmlparse.TreeHTMLParseApp;
import org.emje.treehtmlparse.xpathtree.nodes.XPathTreeConfigNode;

public class URLFilterView extends javax.swing.JDialog {
    
    /** Creates new form URLFilterView */
    public URLFilterView(java.awt.Frame parent, boolean modal, XPathTreeConfigNode config) {
        super(parent, modal);
        configBackup = config.clone();
        configEdit = config;
        acceptedListModel = configEdit.getAcceptedURLListModel();
        skippedListModel = configEdit.getSkippedURLListModel();
        initComponents();
    }
    
    public static XPathTreeConfigNode showDialog(java.awt.Frame parent, boolean modal, XPathTreeConfigNode config) {
        urlFilterView = new URLFilterView(parent, modal, config);
        urlFilterView.setLocationRelativeTo(parent);
        urlFilterView.setVisible(true);
        return configEdit;
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        skippedRemoveButton = new javax.swing.JButton();
        skippedEditButton = new javax.swing.JButton();
        skippedAddButton = new javax.swing.JButton();
        acceptedRemoveButton = new javax.swing.JButton();
        acceptedEditButton = new javax.swing.JButton();
        acceptedAddButton = new javax.swing.JButton();
        skippedListScrollPane = new javax.swing.JScrollPane();
        skippedList = new javax.swing.JList();
        skippedLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        acceptedListScrollPane = new javax.swing.JScrollPane();
        acceptedList = new javax.swing.JList();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        acceptedLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.title_1")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        skippedRemoveButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.skippedRemoveButton.text")); // NOI18N
        skippedRemoveButton.setName("skippedRemoveButton"); // NOI18N
        skippedRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skippedRemoveButtonActionPerformed(evt);
            }
        });

        skippedEditButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.skippedEditButton.text")); // NOI18N
        skippedEditButton.setName("skippedEditButton"); // NOI18N
        skippedEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skippedEditButtonActionPerformed(evt);
            }
        });

        skippedAddButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.skippedAddButton.text")); // NOI18N
        skippedAddButton.setName("skippedAddButton"); // NOI18N
        skippedAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skippedAddButtonActionPerformed(evt);
            }
        });

        acceptedRemoveButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.acceptedRemoveButton.text")); // NOI18N
        acceptedRemoveButton.setName("acceptedRemoveButton"); // NOI18N
        acceptedRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptedRemoveButtonActionPerformed(evt);
            }
        });

        acceptedEditButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.acceptedEditButton.text")); // NOI18N
        acceptedEditButton.setName("acceptedEditButton"); // NOI18N
        acceptedEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptedEditButtonActionPerformed(evt);
            }
        });

        acceptedAddButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.acceptedAddButton.text")); // NOI18N
        acceptedAddButton.setName("acceptedAddButton"); // NOI18N
        acceptedAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptedAddButtonActionPerformed(evt);
            }
        });

        skippedListScrollPane.setName("skippedListScrollPane"); // NOI18N

        skippedList.setModel(skippedListModel);
        skippedList.setName("skippedList"); // NOI18N
        skippedListScrollPane.setViewportView(skippedList);

        skippedLabel.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.skippedLabel.text")); // NOI18N
        skippedLabel.setName("skippedLabel"); // NOI18N

        jSeparator2.setName("jSeparator2"); // NOI18N

        acceptedListScrollPane.setName("acceptedListScrollPane"); // NOI18N

        acceptedList.setModel(this.acceptedListModel);
        acceptedList.setName("acceptedList"); // NOI18N
        acceptedListScrollPane.setViewportView(acceptedList);

        okButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        acceptedLabel.setText(org.openide.util.NbBundle.getMessage(URLFilterView.class, "URLFilterView.acceptedLabel.text")); // NOI18N
        acceptedLabel.setName("acceptedLabel"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acceptedLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(skippedListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                            .addComponent(acceptedListScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(acceptedAddButton)
                            .addComponent(acceptedEditButton)
                            .addComponent(acceptedRemoveButton)
                            .addComponent(skippedAddButton)
                            .addComponent(skippedEditButton)
                            .addComponent(skippedRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addComponent(skippedLabel)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {acceptedAddButton, acceptedEditButton, acceptedRemoveButton, cancelButton, okButton, skippedAddButton, skippedEditButton, skippedRemoveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(acceptedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acceptedAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acceptedEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acceptedRemoveButton))
                    .addComponent(acceptedListScrollPane, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(skippedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(skippedAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(skippedEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(skippedRemoveButton))
                    .addComponent(skippedListScrollPane, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // present the previous config object for the return value
        configEdit = configBackup;
        urlFilterView.setVisible(false);
        urlFilterView.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        configEdit.setAcceptedURLListModel(acceptedListModel);
        configEdit.setSkippedURLListModel(skippedListModel);
        urlFilterView.setVisible(false);
        urlFilterView.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void acceptedAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptedAddButtonActionPerformed
        JFrame mainFrame = TreeHTMLParseApp.getApplication().getMainFrame();
        String text = AddAcceptedURLView.showDialog(mainFrame, true, "Add accepted URL", null, configEdit.getSourceURL());
        if (text != null) {
            acceptedListModel.addElement(text);
        }
    }//GEN-LAST:event_acceptedAddButtonActionPerformed

    private void acceptedEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptedEditButtonActionPerformed
        if (this.acceptedList.getSelectedIndex() != -1) {
            JFrame mainFrame = TreeHTMLParseApp.getApplication().getMainFrame();

            String text = acceptedListModel.get(this.acceptedList.getSelectedIndex()).toString();

            text = AddAcceptedURLView.showDialog(mainFrame, true, "Edit accepted URL", text, configEdit.getSourceURL());
            if (text != null) {
                acceptedListModel.setElementAt(text, this.acceptedList.getSelectedIndex());
            }
        }
    }//GEN-LAST:event_acceptedEditButtonActionPerformed

    private void acceptedRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptedRemoveButtonActionPerformed
        if (this.acceptedList.getSelectedIndex() != -1) {
            DefaultListModel model = (DefaultListModel) acceptedList.getModel();
            model.remove(this.acceptedList.getSelectedIndex());
        }
    }//GEN-LAST:event_acceptedRemoveButtonActionPerformed

    private void skippedAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skippedAddButtonActionPerformed
        JFrame mainFrame = TreeHTMLParseApp.getApplication().getMainFrame();
        String text = AddAcceptedURLView.showDialog(mainFrame, true, "Add skipped URL", null, configEdit.getSourceURL());
        if (text != null) {
            skippedListModel.addElement(text);
        }
    }//GEN-LAST:event_skippedAddButtonActionPerformed

    private void skippedEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skippedEditButtonActionPerformed
        if (this.skippedList.getSelectedIndex() != -1) {
            JFrame mainFrame = TreeHTMLParseApp.getApplication().getMainFrame();

            String text = skippedListModel.get(this.skippedList.getSelectedIndex()).toString();

            text = AddAcceptedURLView.showDialog(mainFrame, true, "Edit skipped URL", text, configEdit.getSourceURL());
            if (text != null) {
                skippedListModel.setElementAt(text, this.skippedList.getSelectedIndex());
            }
        }
    }//GEN-LAST:event_skippedEditButtonActionPerformed

    private void skippedRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skippedRemoveButtonActionPerformed
        if (this.skippedList.getSelectedIndex() != -1) {
            DefaultListModel model = (DefaultListModel) skippedList.getModel();
            model.remove(this.skippedList.getSelectedIndex());
        }
    }//GEN-LAST:event_skippedRemoveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptedAddButton;
    private javax.swing.JButton acceptedEditButton;
    private javax.swing.JLabel acceptedLabel;
    private javax.swing.JList acceptedList;
    private javax.swing.JScrollPane acceptedListScrollPane;
    private javax.swing.JButton acceptedRemoveButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton okButton;
    private javax.swing.JButton skippedAddButton;
    private javax.swing.JButton skippedEditButton;
    private javax.swing.JLabel skippedLabel;
    private javax.swing.JList skippedList;
    private javax.swing.JScrollPane skippedListScrollPane;
    private javax.swing.JButton skippedRemoveButton;
    // End of variables declaration//GEN-END:variables

    private static URLFilterView urlFilterView;
    private static XPathTreeConfigNode configEdit;
    private XPathTreeConfigNode configBackup;
    
    private DefaultListModel acceptedListModel;
    private DefaultListModel skippedListModel;

}
